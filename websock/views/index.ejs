<!DOCTYPE html>
<html>
<head>
	<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
	<meta name="viewport" content="initial-scale=1.0, user-scalable=no" />
	<style type="text/css">
		body, html{width: 100%;height: 100%;margin:0;font-family:"微软雅黑";}
		#allmap {height:100%; width: 100%;}
		#menu {position: fixed; background-color:blue; left: 10px; bottom: 30px; color: white}
	</style>
	<title>ADSB实时数据(<%= user.username %>)</title>
</head>
<body>
<div id="allmap"></div>
<div id=menu>
<input type=checkbox checked id=disp_pathpoints onclick="change_pathpoints(this);">显示航点</input>&nbsp; 
显示老化<select id=path_time onchange="span=this.options[this.options.selectedIndex].value;">
<option value=1>1分钟</option>
<option value=5 selected>5分钟</option>
<option value=10>10分钟</option>
</select>
</div>

<script type="text/javascript" src="http://api.map.baidu.com/api?v=2.0&ak=7RuEGPr12yqyg11XVR9Uz7NI"></script>
<script src="/socket.io/socket.io.js"></script>

<script>

var socket = io();

socket.on('connect', function(){
	map_resize();
});

socket.on('ADSB', function(obj){
	updateaid(obj.tm, obj.aid, obj.lon, obj.lat, obj.alt, obj.speed, obj.head, obj.vr)
});

function map_resize() {
	var b = map.getBounds();
        lon1 = b.getSouthWest().lng;
	lat1 = b.getSouthWest().lat;
	lon2 = b.getNorthEast().lng;
	lat2 = b.getNorthEast().lat;
	socket.emit('viewchange', { lon1: lon1, lat1: lat1, lon2: lon2, lat2: lat2});	
}

var markers = {};
var lasttms = {};
var iconurls = {};
var infowindows = {};
var movepaths = {};
var polylines = {};
var movepoints = {};
var display_pathpoints = true;
var span = 5;
var centered = false;

var colors = ["#000000","#1400FF","#14F0FF","#78FF00","#FF78F0","#0078F0","#F0FF14","#FF78F0","#FF78F0","#FF78F0"];

function getcolor(aid){
	var colorindex = 0;
	for(var i=0;i<aid.length;i++)
		colorindex += aid.charCodeAt(i);
	colorindex = colorindex % colors.length;
	return colors[colorindex];
}

//增加航迹点
function addp(aid, lon, lat, msg) {
	var icon = new BMap.Icon("img/p.png", new BMap.Size(3, 3));	
	var m = new BMap.Marker(new BMap.Point(lon,lat), {icon: icon});
	var infowindow = new BMap.InfoWindow(msg, {width:300});
	(function(){
        	m.addEventListener('click', function(){
            	this.openInfoWindow(infowindow);
        	});
	})();
	map.addOverlay(m);
	return m;
}

function change_pathpoints()
{
	if(!display_pathpoints) {
		display_pathpoints = true;
		return;
	}
	for ( aid in lasttms ) {
		for(i=0;i<movepoints[aid].length;i++) 
			map.removeOverlay(movepoints[aid][i]);
		movepoints[aid].splice(0, movepoints[aid].length);
	}
	display_pathpoints = false;
}

function deleteoldstation()
{	var d = new Date();	
	var tm = d.getTime()/1000;
	for ( aid in lasttms ) {
		if( lasttms[aid] < tm - span*60) {  // too old, delete it
			map.removeOverlay(polylines[aid]);
			delete polylines[aid];
			map.removeOverlay(markers[aid]);
			delete markers[aid];
			delete infowindows[aid];
			delete iconurls[aid];
			delete movepaths[aid];
			delete lasttms[aid];
			for(i=0;i<movepoints[aid].length;i++) 
				map.removeOverlay(movepoints[aid][i]);
			movepoints[aid].splice(0, movepoints[aid].length);
			delete movepoints[aid];
		}
	}
       	setTimeout("deleteoldstation();","2000");  
}

function updateaid(tmstr, aid, lon, lat, alt, speed, head, vr)
{	var d = new Date();	
	var tm = Math.round(d.getTime()/1000);
	var iconurl = "img/"+head+".png";
	var msg= "<font face=微软雅黑 size=2><img src="+iconurl+"> "+aid+
        	"<hr color=green>"+tmstr+"<br>"+
        	"<b> 海拔 "+alt+"ft("+Math.round(alt*0.3048)+"米)<br>速度 "+speed+"kn("+Math.round(speed*1.852)+"KPH)/"+head+"° <br>爬升 "+vr+"ft/min</b><br></font>";

	if(markers.hasOwnProperty(aid)) {   // aid已经存在
		if(tm<=lasttms[aid]) return; // 同一时间的点已经更新过了（假定每秒最多传回来一个点，第二个点不再处理）
		markers[aid].setPosition( new BMap.Point(lon, lat) ); // 更改最后的点位置
		infowindows[aid].setContent(msg);
		if(iconurls[aid]!=iconurl) {
			var nicon = new BMap.Icon(iconurl, new BMap.Size(24, 24), {anchor: new BMap.Size(12, 12)});
			markers[aid].setIcon(nicon);
			iconurls[aid]=iconurl;
		}
		lasttms[aid] = tm;
		// 更新航迹
		var p = new BMap.Point(lon,lat);
		movepaths[aid].push (p);
		polylines[aid].setPath(movepaths[aid]);
		if(display_pathpoints) {
			m = addp(aid,lon,lat,msg);
			movepoints[aid].push(m);
		}
		return;
	}
	// 新aid
	var icon = new BMap.Icon(iconurl, new BMap.Size(24, 24), {anchor: new BMap.Size(12, 12)});	
	var marker = new BMap.Marker(new BMap.Point(lon,lat), {icon: icon});
	var lb = new BMap.Label(aid, {offset: new BMap.Size(20,-10)});
	lb.setStyle({border:0, background: "#eeeeee"});
	marker.setLabel(lb);
	var infowindow = new BMap.InfoWindow(msg, {width:300});
	(function(){
        	marker.addEventListener('click', function(){
            	this.openInfoWindow(infowindow);
        	});
	})();
	map.addOverlay(marker);
	markers[aid]= marker;
	lasttms[aid] = tm;
	iconurls[aid] = iconurl;
	infowindows[aid] = infowindow;
	// 处理航迹
	var p = new BMap.Point(lon,lat);
	if(!centered) {
		centered = true;
		map.centerAndZoom(p, 12);
	}
	movepaths[aid] = new Array();
	movepaths[aid].push (p);
	polylines[aid] = new Array();
	polylines[aid] = new BMap.Polyline(movepaths[aid], {strokeColor:getcolor(aid), strokeWeight:4, strokeOpacity:0.9});
	map.addOverlay(polylines[aid]);
	movepoints[aid] = new Array();
	if(display_pathpoints) {
		m = addp(aid,lon,lat,msg);
		movepoints[aid].push(m);
	}
}

// 百度地图API功能
var map = new BMap.Map("allmap");
map.enableScrollWheelZoom();

var top_left_control = new BMap.ScaleControl({anchor: BMAP_ANCHOR_TOP_LEFT});// 左上角，添加比例尺
var top_left_navigation = new BMap.NavigationControl();  //左上角，添加默认缩放平移控件
	
//添加控件和比例尺
map.addControl(top_left_control);        
map.addControl(top_left_navigation);     
map.addControl(new BMap.MapTypeControl());

map.addEventListener('moveend', map_resize);
map.addEventListener('zoomend', map_resize);
map.addEventListener('resize', map_resize);

map.centerAndZoom(new BMap.Point(108.940178,34.5), 6);

setTimeout("deleteoldstation();", "2000");
</script>
</body>
</html>
